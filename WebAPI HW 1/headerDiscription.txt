Review the HTTP Headers in the Request and Response – create text file and describe
each key value pair in the HTTP header in both request and response and check it in
with the project to GitHub (e.g. what is the content-type and what does it mean


Request Headers:

cache-control:"no-cache"
	"Used to specify directives that must be obeyed by all caching mechanisms along the request-response chain."
	PostMan is asking the server to get a fresh version of the data; the request will not build a chache to rely
	on for future queries.


Postman-Token:"26049839-fe77-4cdb-8c8d-af769c4d4dbf"
	This is an authentication helper.
	Facilitates Basic access authentication, the simplest technique for enforcing access controls to web resources.
	it doesn't require cookies, session identifiers, or login pages; rather, 
	HTTP Basic authentication uses standard fields in the HTTP header, obviating the need for handshakes.

User-Agent:"PostmanRuntime/3.0.9"
	The user-Agent request field contains information about the user agent originating the request. This is for 
	statistical purposes, the tracing of protocol violations, and automated recognition of user-Agents.

	
Accept:"*/*"
	Signifies what characters are acceptable in the response to the requesting client. 
	"*" means that all characters are acceptable, including ISO-8859-1.

Host:"www.googleapis.com"
	he Host request-header field specifies the Internet host and port number of the resource being requested, 
	as obtained from the original URI given by the user or referring resource.
	The Host field value MUST represent the naming authority of the origin server or gateway given by the original URL. 

accept-encoding:"gzip, deflate"
	The Accept-Encoding request-header field is similar to Accept, 
	but restricts the content-codings (section 3.5) that are acceptable in the response.
	So the files the we're accepting back are gzip and deflate.


Response Headers:
expires:"Sat, 04 Feb 2017 19:18:36 GMT"
	The Expires entity-header field gives the date/time after which the response is considered stale. 
	A stale cache entry may not normally be returned by a cache (either a proxy cache or a user agent cache) unless it is first
	validated with the origin server (or with an intermediate cache that has a fresh copy of the entity). 

date:"Sat, 04 Feb 2017 19:18:36 GMT"
	The Date general-header field represents the date and time at which the message was originated, having the same semantics
	as orig-date in RFC 822. The field value is an HTTP-date, as described in section 3.3.1; it MUST be sent in RFC 1123 [8]-date format.

cache-control:"private, max-age=0, must-revalidate, no-transform"
	"private" : Indicates that all or part of the response message is intended for a single user and
	MUST NOT be cached by a shared cache, such as a proxy server.
	
	The header Cache-Control: max-age=0 implies that the content is considered stale (and must be re-fetched) immediately,
	which is in effect the same thing as Cache-Control: no-cache.
	
	must-revalidate: When the must-revalidate directive is present in a response received by a cache, 
	that cache MUST NOT use the entry after it becomes stale to respond to a subsequent request without
	first revalidating it with the origin server

	no transform: No transformations or conversions should be made to the resource.
	The Content-Encoding, Content-Range, Content-Type headers must not be modified by a proxy.
	

etag:""vFp1TYDMppbWxVi0Wgw_upD83cI/3vvSKxJ416WsfBtvlfXFIgwIkwU""
	The ETag response-header field provides the current value of the entity tag for the requested variant.
	The entity tag MAY be used for comparison with other entities from the same resource 

vary:
The Vary field value indicates the set of request-header fields that fully determines, while the response is fresh, 
whether a cache is permitted to use the response to reply to a subsequent request without revalidation. 	

0:"Origin"

1:"X-Origin"


content-type:"application/json; charset=UTF-8"
The Content-Type entity-header field indicates the media type of the entity-body sent to the recipient or,
in the case of the HEAD method, the media type that would have been sent had the request been a GET.

x-content-type-options:"nosniff"
	Response HTTP headers such as these used by the server indicate that the MIME types advertiesed in the 
	Content-Type headers should not be changed and be followed.
	This header was introduced by Microsoft in IE 8 as a way for webmasters to block content sniffing that was happening and 
        could transform non-executable MIME types into executable MIME types. 
	---src: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#MIME_sniffing

x-frame-options:"SAMEORIGIN"
The X-Frame-Options HTTP response header can be used to indicate whether or not a browser should be 
allowed to render a page in a <frame>, <iframe> or <object> . Sites can use this to avoid clickjacking attacks,
by ensuring that their content is not embedded into other sites.


x-xss-protection:"1; mode=block"
	The HTTP X-XSS-Protection response header is a feature of Internet Explorer, Chrome and Safari that stops pages
	from loading when they detect reflected cross-site scripting (XSS) attacks. 

	mode=block
	Enables XSS filtering. Rather than sanitizing the page, the browser will 
        prevent rendering of the page if an attack is detected.

content-length:"35434"
The Content-Length entity-header field indicates the size of the entity-body, in decimal number of OCTETs,
sent to the recipient or, in the case of the HEAD method, the size of the entity-body that would have been
sent had the request been a GET.

server:"GSE"
The Server response-header field contains information about the software used by the origin server to handle the request.
The field can contain multiple product tokens (section 3.8) and comments identifying the server 
and any significant subproducts. The product tokens are listed in order of their significance for identifying the application.


alt-svc:"quic=":443"; ma=2592000; v="35,34""
	allows the availability of alternative services to the client.


----------------------------------------------------------------------------------------
---main source: https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html